ARG BASE_IMAGE=quay.io/guimou/s2i-minimal-notebook-c9s-py39:0.1.0
ARG OPENCV_VERSION=4.6.0


FROM ${BASE_IMAGE} as BUILDER

USER 0

##########################################
# Install various dependencies for build #
##########################################

RUN yum install -y yum-utils && \
    yum config-manager --set-enabled crb && \
    yum install -y https://download.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
    yum install -y https://download1.rpmfusion.org/free/el/rpmfusion-free-release-9.noarch.rpm && \
    yum install -y https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-9.noarch.rpm && \
    INSTALL_PKGS="libsndfile \
    ffmpeg \
    ffmpeg-devel" && \
    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    yum -y clean all --enablerepo='*' && \
    rm -rf /var/cache/dnf

# Install needed packages to build
RUN INSTALL_PKGS="epel-release git gcc gcc-c++ cmake qt5-qtbase-devel \
    gtk2-devel libpng-devel jasper-devel OpenEXR-devel libwebp-devel \
    libjpeg-turbo-devel libtiff-devel tbb-devel libv4l-devel \
    eigen3-devel freeglut-devel mesa-libGL mesa-libGL-devel \
    boost boost-thread boost-devel gstreamer1-plugins-base \
    gstreamer1-plugins-base-devel hdf5  hdf5-devel openblas openblas-devel \
    lapack lapack-devel" && \
    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \
    #rpm -V $INSTALL_PKGS && \
    yum -y clean all --enablerepo='*' && \
    rm -rf /var/cache/dnf && \
    pip install --no-cache-dir numpy==1.24.1

RUN wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda-repo-rhel9-11-8-local-11.8.0_520.61.05-1.x86_64.rpm && \
    rpm -i cuda-repo-rhel9-11-8-local-11.8.0_520.61.05-1.x86_64.rpm && \
    yum clean all && \
    yum -y module install nvidia-driver:latest-dkms && \
    yum -y install cuda && \
    rm -rf /var/cache/dnf && \
    ldconfig /usr/local/cuda/lib64 && \
    unset PROMPT_COMMAND

ENV PATH=$PATH:/usr/local/cuda/bin
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64

#########################################
## Build OpenCV and Contrib from source #
#########################################

# Build OpenCV
RUN mkdir -p /tmp/opencv_build && cd /tmp/opencv_build && \
    git clone --depth 1 --branch ${OPENCV_VERSION} https://github.com/opencv/opencv.git && \
    git clone --depth 1 --branch ${OPENCV_VERSION} https://github.com/opencv/opencv_contrib.git && \
    mkdir -p /tmp/opencv_build/opencv/build

WORKDIR /tmp/opencv_build/opencv/build

RUN cmake3 -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/opt/opencv \
    -D BUILD_opencv_python2=OFF \
    -D BUILD_opencv_python3=ON \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D OPENCV_GENERATE_PKGCONFIG=ON \
    -D WITH_CUDA=ON \
    -D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
    -D CUDA_BIN_PATH=/usr/local/cuda/bin \
    -D CUDA_CUDART_LIBRARY=/usr/local/cuda/lib64/libcudart.so \
    -D WITH_CUDNN=OFF \
    -D WITH_CUBLAS=ON \
    -D WITH_TBB=ON \
    -D OPENCV_DNN_CUDA=OFF \
    -D OPENCV_ENABLE_NONFREE=OFF \
    -D CUDA_ARCH_BIN=6.0,6.1,7.0,7.5,8.0,8.6 \
    -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_build/opencv_contrib/modules \
    -D BUILD_EXAMPLES=OFF \
    -D INSTALL_TESTS=OFF .. && \
    make -j`nproc --ignore=2` && \
    make install

######################
## Build final image #
######################

#FROM DATASCIENCE as FINAL

#USER 0

#RUN yum install -y yum-utils && \
#    yum-config-manager --enable powertools && \
#    yum install -y https://download.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
#    yum install -y https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm && \
#    yum install -y https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-8.noarch.rpm && \
#    INSTALL_PKGS="libsndfile \
#    ffmpeg \
#    ffmpeg-devel" && \
#    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \
#    rpm -V $INSTALL_PKGS && \
#    yum -y clean all --enablerepo='*' && \
#    rm -rf /var/cache/dnf

# Install runtime packages
#RUN INSTALL_PKGS="epel-release git qt5-qtbase gtk2 libpng jasper-libs OpenEXR-libs \
#    libwebp libjpeg-turbo libtiff tbb libv4l eigen3-devel freeglut mesa-libGL \
#    boost boost-thread gstreamer1-plugins-base hdf5 openblas lapack exempi \
#    PackageKit-gstreamer-plugin gstreamer-plugin-crystalhd gstreamer1 \
#    gstreamer1-plugins-bad-free gstreamer1-plugins-base gstreamer1-plugins-good \
#    gstreamer1-plugins-ugly-free gstreamer1-svt-av1 gstreamer1-svt-vp9" && \
#    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \
#    rpm -V $INSTALL_PKGS && \
#    yum -y clean all --enablerepo='*' && \
#    rm -rf /var/cache/dnf

#COPY --from=BUILDER /opt/opencv /opt/opencv

## Link OpenCV, and include it in the Python path (venv)
#RUN ln -s /opt/opencv/lib64/pkgconfig/opencv4.pc /usr/share/pkgconfig/ && \
#    ldconfig && \
#    ln -s /opt/opencv/lib/python3.9/site-packages/cv2 /opt/app-root/lib/python3.9/site-packages/cv2 && \
#    fix-permissions /opt/app-root

#WORKDIR /opt/app-root/src
#USER 1001

#CMD /opt/app-root/bin/start-singleuser.sh --ip=0.0.0.0 --port=8080