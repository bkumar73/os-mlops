kind: Project
apiVersion: project.openshift.io/v1
metadata:
  name: fraud-detection
  labels:
    kubernetes.io/metadata.name: fraud-detection
    modelmesh-enabled: 'true'
    opendatahub.io/dashboard: 'true'
  annotations:
    openshift.io/description: ''
    openshift.io/display-name: fraud-detection
spec:
  finalizers:
    - kubernetes
---
kind: Project
apiVersion: project.openshift.io/v1
metadata:
  name: object-detection
  labels:
    kubernetes.io/metadata.name: object-detection
    modelmesh-enabled: 'true'
    opendatahub.io/dashboard: 'true'
  annotations:
    openshift.io/description: ''
    openshift.io/display-name: object-detection
spec:
  finalizers:
    - kubernetes
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-connection-pipelines
  namespace: fraud-detection
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: pipelines
data:
  AWS_ACCESS_KEY_ID: bWluaW8=
  AWS_DEFAULT_REGION: dXMtZWFzdC0x
  AWS_S3_BUCKET: ZnJhdWQtZGV0ZWN0aW9uLXBpcGVsaW5lcw==
  AWS_S3_ENDPOINT: >-
    aHR0cHM6Ly9taW5pby1hcGktbWluaW8uYXBwcy5jbHVzdGVyLWR3MnRzLmR3MnRzLnNhbmRib3gxMTE4Lm9wZW50bGMuY29t
  AWS_SECRET_ACCESS_KEY: bWluaW8xMjM=
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-connection-fraud-detection
  namespace: fraud-detection
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: fraud-detection
data:
  AWS_ACCESS_KEY_ID: bWluaW8=
  AWS_DEFAULT_REGION: dXMtZWFzdC0x
  AWS_S3_BUCKET: ZnJhdWQtZGV0ZWN0aW9u
  AWS_S3_ENDPOINT: aHR0cDovL21pbmlvLXNlcnZpY2UubWluaW8uc3ZjOjkwMDA=
  AWS_SECRET_ACCESS_KEY: bWluaW8xMjM=
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-connection-pipelines
  namespace: object-detection
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: pipelines
data:
  AWS_ACCESS_KEY_ID: bWluaW8=
  AWS_DEFAULT_REGION: dXMtZWFzdC0x
  AWS_S3_BUCKET: ZnJhdWQtZGV0ZWN0aW9uLXBpcGVsaW5lcw==
  AWS_S3_ENDPOINT: >-
    aHR0cHM6Ly9taW5pby1hcGktbWluaW8uYXBwcy5jbHVzdGVyLWR3MnRzLmR3MnRzLnNhbmRib3gxMTE4Lm9wZW50bGMuY29t
  AWS_SECRET_ACCESS_KEY: bWluaW8xMjM=
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-connection-object-detection
  namespace: object-detection
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: object-detection
data:
  AWS_ACCESS_KEY_ID: bWluaW8=
  AWS_DEFAULT_REGION: dXMtZWFzdC0x
  AWS_S3_BUCKET: b2JqZWN0LWRldGVjdGlvbg==
  AWS_S3_ENDPOINT: aHR0cDovL21pbmlvLXNlcnZpY2UubWluaW8uc3ZjOjkwMDA=
  AWS_SECRET_ACCESS_KEY: bWluaW8xMjM=
type: Opaque
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Face recognition Elyra"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image enabling computer vision use cases, in particular face recognition.
  name: face-recognition-elyra
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "1.1.0"
      from:
        kind: DockerImage
        name: quay.io/mmurakam/face-recognition-notebook:face-recognition-notebook-v2.0.3
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"opencv","version":"4.6.0.66"},{"name":"face-recognition","version":"1.3.0"},{"name":"elyra","version":"3.14.1"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.8"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Code Server CUDA Data Science"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image with VS Code application.
  name: code-server-cuda-data-science
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "2023a"
      from:
        kind: DockerImage
        name: quay.io/opendatahub-contrib/workbench-images:cuda-code-server-ubi9-py39_2023b_latest
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"code-server","version":"4.9.0"},{"name":"cuda","version":"11.8.0"},{"name":"cudnn","version":"8.6.0"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.9"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Spark CUDA"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image with PySpark.
  name: spark-cuda
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "2023a"
      from:
        kind: DockerImage
        name: quay.io/opendatahub-contrib/workbench-images:cuda-jupyter-spark-ubi9-py39_2023a_20230101
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"pyspark","version":"3.3.1"},{"name":"hadoop","version":"3.3.4"},{"name":"cuda","version":"11.8.0"},{"name":"cudnn","version":"8.6.0"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.9"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "OptaPy"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image with OptaPy.
  name: optapy
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "2023a"
      from:
        kind: DockerImage
        name: quay.io/opendatahub-contrib/workbench-images:jupyter-optapy-ubi9-py39_2023a_20230101
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"optapy","version":"8.31.1b0"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.9"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "RStudio CUDA Data Science"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image RStudio application.
  name: rstudio-cuda-data-science
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "2023a"
      from:
        kind: DockerImage
        name: quay.io/opendatahub-contrib/workbench-images:cuda-rstudio-c9s-py39_2023b_latest
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"rstudio","version":"2022.07.2-576"},{"name":"cuda","version":"11.8.0"},{"name":"cudnn","version":"8.6.0"}]
        opendatahub.io/notebook-software: '[{"name":"R","version":"4.2.2"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Monai"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image with Monai.
  name: monai
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "2023a"
      from:
        kind: DockerImage
        name: quay.io/opendatahub-contrib/workbench-images:jupyter-monai-c9s-py39_2023a_20230101
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"monai","version":"1.1.0"},{"name":"opencv","version":"4.7.0"},{"name":"torch","version":"1.13.1"},{"name":"elyra","version":"3.14.1"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.9"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Elyra"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image with Elyra.
  name: elyra
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "0.4.0"
      from:
        kind: DockerImage
        name: quay.io/mmurakam/elyra-notebook:elyra-notebook-v1.0.3
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"elyra","version":"3.14.1"},{"name":"scikit-learn","version":"1.2.0"},{"name":"boto3","version":"1.24.59"},{"name":"lightgbm","version":"3.3.5"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.8"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Object detection Elyra"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image enabling computer vision use cases, in particular object detection.
  name: object-detection-elyra
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "1.0.2"
      from:
        kind: DockerImage
        name: quay.io/mmurakam/object-detection-notebook:object-detection-notebook-v1.0.3
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"onnxruntime","version":"1.14.1"},{"name":"Pillow","version":"9.3.0"},{"name":"elyra","version":"3.14.1"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.8"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Trino Elyra"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image enabling data integration through Trino and Starburst.
  name: trino-elyra
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "0.1.0"
      from:
        kind: DockerImage
        name: quay.io/mmurakam/trino-notebook:trino-notebook-v0.1.2
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"trino","version":"0.323.0"},{"name":"scikit-learn","version":"0.24.2"},{"name":"elyra","version":"3.14.1"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.8"}]'
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  annotations:
    opendatahub.io/notebook-image-name: "Spark Elyra"
    opendatahub.io/notebook-image-desc: >-
      Jupyter notebook image enabling distributed processing with Spark.
  name: spark-elyra
  namespace: redhat-ods-applications
  labels:
    component.opendatahub.io/name: jupyterhub
    opendatahub.io/component: "true"
    opendatahub.io/notebook-image: "true"
spec:
  lookupPolicy:
    local: true
  tags:
    - name: "0.1.0"
      from:
        kind: DockerImage
        name: quay.io/mmurakam/spark-notebook:spark-notebook-v.0.1.0
      importPolicy: {}
      referencePolicy:
        type: Local
      annotations:
        opendatahub.io/notebook-python-dependencies: >-
          [{"name":"trino","version":"0.323.0"},{"name":"scikit-learn","version":"0.24.2"},{"name":"elyra","version":"3.14.1"}]
        opendatahub.io/notebook-software: '[{"name":"Python","version":"3.8"}]'
---
apiVersion: project.openshift.io/v1
kind: Project
metadata:
  name: minio
spec:
  finalizers:
  - kubernetes
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: minio-pvc
  namespace: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  volumeMode: Filesystem
---
kind: Secret
apiVersion: v1
metadata:
  name: minio-secret
  namespace: minio
stringData:
  accesskey: minio
  secretkey: minio123
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: minio
  namespace: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: minio
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
      containers:
        - resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: minio
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secretkey
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 9090
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: minio
          terminationMessagePolicy: File
          image: >-
            docker.io/minio/minio:RELEASE.2023-06-19T19-52-50Z
          args:
            - server
            - /data
            - --console-address
            - :9090
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: minio-service
  namespace: minio
spec:
  ipFamilies:
    - IPv4
  ports:    
    - name: api
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: ui
      protocol: TCP
      port: 9090
      targetPort: 9090
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: minio
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: minio-api
  namespace: minio
spec:
  to:
    kind: Service
    name: minio-service
    weight: 100
  port:
    targetPort: api
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: minio-ui
  namespace: minio
spec:
  to:
    kind: Service
    name: minio-service
    weight: 100
  port:
    targetPort: ui
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-all-namespaces
  namespace: fraud-detection
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector: {}
  policyTypes:
    - Ingress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-ingress-namespace
  namespace: fraud-detection
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy: global
  policyTypes:
    - Ingress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-all-namespaces
  namespace: object-detection
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector: {}
  policyTypes:
    - Ingress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-ingress-namespace
  namespace: object-detection
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy: global
  policyTypes:
    - Ingress
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    openshift.io/description: ''
    openshift.io/display-name: development
  name: development
  namespace: fraud-detection
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    openshift.io/description: ''
    openshift.io/display-name: development
  name: development
  namespace: object-detection
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  volumeMode: Filesystem
---
apiVersion: datasciencepipelinesapplications.opendatahub.io/v1alpha1
kind: DataSciencePipelinesApplication
metadata:
  finalizers:
    - datasciencepipelinesapplications.opendatahub.io/finalizer
  name: pipelines-definition
  namespace: fraud-detection
spec:
  apiServer:
    stripEOF: true
    dbConfigConMaxLifetimeSec: 120
    applyTektonCustomResource: true
    deploy: true
    enableSamplePipeline: false
    autoUpdatePipelineDefaultVersion: true
    archiveLogs: false
    terminateStatus: Cancelled
    enableOauth: true
    trackArtifacts: true
    collectMetrics: true
    injectDefaultScript: true
  database:
    mariaDB:
      deploy: true
      pipelineDBName: mlpipeline
      pvcSize: 10Gi
      username: mlpipeline
  objectStorage:
    externalStorage:
      bucket: fraud-detection-pipelines
      host: minio-service.minio.svc:9000
      port: ''
      s3CredentialsSecret:
        accessKey: AWS_ACCESS_KEY_ID
        secretKey: AWS_SECRET_ACCESS_KEY
        secretName: aws-connection-pipelines
      scheme: http
      secure: false
  persistenceAgent:
    deploy: true
    numWorkers: 2
  scheduledWorkflow:
    cronScheduleTimezone: UTC
    deploy: true
---
apiVersion: datasciencepipelinesapplications.opendatahub.io/v1alpha1
kind: DataSciencePipelinesApplication
metadata:
  finalizers:
    - datasciencepipelinesapplications.opendatahub.io/finalizer
  name: pipelines-definition
  namespace: object-detection
spec:
  apiServer:
    stripEOF: true
    dbConfigConMaxLifetimeSec: 120
    applyTektonCustomResource: true
    deploy: true
    enableSamplePipeline: false
    autoUpdatePipelineDefaultVersion: true
    archiveLogs: false
    terminateStatus: Cancelled
    enableOauth: true
    trackArtifacts: true
    collectMetrics: true
    injectDefaultScript: true
  database:
    mariaDB:
      deploy: true
      pipelineDBName: mlpipeline
      pvcSize: 10Gi
      username: mlpipeline
  objectStorage:
    externalStorage:
      bucket: object-detection-pipelines
      host: minio-service.minio.svc:9000
      port: ''
      s3CredentialsSecret:
        accessKey: AWS_ACCESS_KEY_ID
        secretKey: AWS_SECRET_ACCESS_KEY
        secretName: aws-connection-pipelines
      scheme: http
      secure: false
  persistenceAgent:
    deploy: true
    numWorkers: 2
  scheduledWorkflow:
    cronScheduleTimezone: UTC
    deploy: true
---
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    enable-auth: 'false'
    enable-route: 'true'
    opendatahub.io/disable-gpu: 'true'
    opendatahub.io/template-display-name: OpenVINO Model Server
    opendatahub.io/template-name: ovms
    openshift.io/display-name: OVMS
  name: ovms
  namespace: object-detection
  labels:
    name: ovms
    opendatahub.io/dashboard: 'true'
spec:
  builtInAdapter:
    memBufferBytes: 134217728
    modelLoadingTimeoutMillis: 90000
    runtimeManagementPort: 8888
    serverType: ovms
  containers:
    - args:
        - '--port=8001'
        - '--rest_port=8888'
        - '--config_path=/models/model_config_list.json'
        - '--file_system_poll_wait_seconds=0'
        - '--grpc_bind_address=127.0.0.1'
        - '--rest_bind_address=127.0.0.1'
      image: >-
        quay.io/opendatahub/openvino_model_server@sha256:20dbfbaf53d1afbd47c612d953984238cb0e207972ed544a5ea662c2404f276d
      name: ovms
      resources:
        limits:
          cpu: '2'
          memory: 8Gi
        requests:
          cpu: '1'
          memory: 4Gi
  grpcDataEndpoint: 'port:8001'
  grpcEndpoint: 'port:8085'
  multiModel: true
  protocolVersions:
    - grpc-v1
  replicas: 1
  supportedModelFormats:
    - autoSelect: true
      name: openvino_ir
      version: opset1
    - autoSelect: true
      name: onnx
      version: '1'
    - autoSelect: true
      name: tensorflow
      version: '2'
