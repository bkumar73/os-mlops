{{- $userCount := .Values.user_count -}}
{{- range $i := until (int $userCount) }}
---
kind: Namespace
apiVersion: v1
metadata:
  name: {{ printf "user%d" $i }}
  labels:
    modelmesh-enabled: 'true'
    opendatahub.io/dashboard: 'true'
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-connection-object-detection
  namespace: {{ printf "user%d" $i }}
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: object-detection
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_DEFAULT_REGION: us-east-1
  AWS_S3_BUCKET: object-detection
  AWS_S3_ENDPOINT: http://minio-service:9000
  AWS_SECRET_ACCESS_KEY: minio123
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-connection-pipelines
  namespace: {{ printf "user%d" $i }}
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: pipelines
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_DEFAULT_REGION: us-east-1
  AWS_S3_BUCKET: object-detection-pipelines
  AWS_S3_ENDPOINT: http://minio-service:9000
  AWS_SECRET_ACCESS_KEY: minio123
type: Opaque
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: offline-scoring-pvc
  namespace: {{ printf "user%d" $i }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: object-detection-training-pvc
  namespace: {{ printf "user%d" $i }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    openshift.io/description: ''
    openshift.io/display-name: development
  name: development
  namespace: {{ printf "user%d" $i }}
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  volumeMode: Filesystem
---
apiVersion: datasciencepipelinesapplications.opendatahub.io/v1alpha1
kind: DataSciencePipelinesApplication
metadata:
  finalizers:
    - datasciencepipelinesapplications.opendatahub.io/finalizer
  name: pipelines-definition
  namespace: {{ printf "user%d" $i }}
spec:
  apiServer:
    stripEOF: true
    dbConfigConMaxLifetimeSec: 120
    applyTektonCustomResource: true
    deploy: true
    enableSamplePipeline: false
    autoUpdatePipelineDefaultVersion: true
    archiveLogs: false
    terminateStatus: Cancelled
    enableOauth: true
    trackArtifacts: true
    collectMetrics: true
    injectDefaultScript: true
  database:
    mariaDB:
      deploy: true
      pipelineDBName: mlpipeline
      pvcSize: 10Gi
      username: mlpipeline
  objectStorage:
    externalStorage:
      bucket: object-detection-pipelines
      host: minio-service.{{ printf "user%d" $i }}.svc:9000
      port: ''
      s3CredentialsSecret:
        accessKey: AWS_ACCESS_KEY_ID
        secretKey: AWS_SECRET_ACCESS_KEY
        secretName: aws-connection-pipelines
      scheme: http
      secure: false
  persistenceAgent:
    deploy: true
    numWorkers: 2
  scheduledWorkflow:
    cronScheduleTimezone: UTC
    deploy: true
---
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    enable-auth: 'false'
    enable-route: 'true'
    opendatahub.io/disable-gpu: 'true'
    opendatahub.io/template-display-name: OpenVINO Model Server
    opendatahub.io/template-name: ovms
    openshift.io/display-name: OVMS
  name: ovms
  namespace: {{ printf "user%d" $i }}
  labels:
    name: ovms
    opendatahub.io/dashboard: 'true'
spec:
  builtInAdapter:
    memBufferBytes: 134217728
    modelLoadingTimeoutMillis: 90000
    runtimeManagementPort: 8888
    serverType: ovms
  containers:
    - args:
        - '--port=8001'
        - '--rest_port=8888'
        - '--config_path=/models/model_config_list.json'
        - '--file_system_poll_wait_seconds=0'
        - '--grpc_bind_address=127.0.0.1'
        - '--rest_bind_address=127.0.0.1'
      image: >-
        quay.io/opendatahub/openvino_model_server@sha256:20dbfbaf53d1afbd47c612d953984238cb0e207972ed544a5ea662c2404f276d
      name: ovms
      resources:
        limits:
          cpu: '2'
          memory: 8Gi
        requests:
          cpu: '1'
          memory: 4Gi
  grpcDataEndpoint: 'port:8001'
  grpcEndpoint: 'port:8085'
  multiModel: true
  protocolVersions:
    - grpc-v1
  replicas: 1
  supportedModelFormats:
    - autoSelect: true
      name: openvino_ir
      version: opset1
    - autoSelect: true
      name: onnx
      version: '1'
    - autoSelect: true
      name: tensorflow
      version: '2'
---
kind: Secret
apiVersion: v1
metadata:
  name: minio-secret
  namespace: {{ printf "user%d" $i }}
stringData:
  accesskey: minio
  secretkey: minio123
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: minio
  namespace: {{ printf "user%d" $i }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: minio
    spec:
      containers:
        - resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: minio
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secretkey
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 9090
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: quay.io/mmurakam/minio:minio-v0.4.2
          args:
            - server
            - /data1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: minio-service
  namespace: {{ printf "user%d" $i }}
spec:
  ipFamilies:
    - IPv4
  ports:    
    - name: http
      protocol: TCP
      port: 9000
      targetPort: 9000
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: minio
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: minio
  namespace: {{ printf "user%d" $i }}
spec:
  to:
    kind: Service
    name: minio-service
    weight: 100
  port:
    targetPort: http
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dashboard-permissions
  namespace: {{ printf "user%d" $i }}
subjects:
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: {{ printf "user%d" $i }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
{{- end }}