kind: Deployment
apiVersion: apps/v1
metadata:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-workflows
      app.kubernetes.io/name: argo-workflows-workflow-controller
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: workflow-controller
        app.kubernetes.io/instance: argo-workflows
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argo-workflows-workflow-controller
        app.kubernetes.io/part-of: argo-workflows
        app.kubernetes.io/version: v3.5.6
        helm.sh/chart: argo-workflows-0.41.4
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: argo-workflows-workflow-controller
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: controller
          command:
            - workflow-controller
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6060
              scheme: HTTP
            initialDelaySeconds: 90
            timeoutSeconds: 30
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: LEADER_ELECTION_DISABLE
              value: 'true'
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
              protocol: TCP
            - containerPort: 6060
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: 'quay.io/argoproj/workflow-controller:v3.5.6'
          args:
            - '--configmap'
            - argo-workflows-workflow-controller-configmap
            - '--executor-image'
            - 'quay.io/argoproj/argoexec:v3.5.6'
            - '--loglevel'
            - info
            - '--gloglevel'
            - '0'
            - '--log-format'
            - text
      serviceAccount: argo-workflows-workflow-controller
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600